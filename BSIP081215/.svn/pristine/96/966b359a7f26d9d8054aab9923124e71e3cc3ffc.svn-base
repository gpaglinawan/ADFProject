package com.fda.aps.model.viewobject;

import com.fda.aps.model.entity.ApsReferenceEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jul 26 12:57:36 EDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ApsReferenceViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ReferenceCode {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getReferenceCode();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setReferenceCode((String)value);
            }
        }
        ,
        ReferenceDescription {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getReferenceDescription();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setReferenceDescription((String)value);
            }
        }
        ,
        ReferenceId {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getReferenceId();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setReferenceId((Number)value);
            }
        }
        ,
        ReferenceType {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getReferenceType();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setReferenceType((String)value);
            }
        }
        ,
        EffectiveEndDate {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getEffectiveEndDate();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setEffectiveEndDate((Date)value);
            }
        }
        ,
        EffectiveFg {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getEffectiveFg();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setEffectiveFg((String)value);
            }
        }
        ,
        editable {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.geteditable();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.seteditable((Boolean)value);
            }
        }
        ,
        deletable {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getdeletable();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setdeletable((Boolean)value);
            }
        }
        ,
        AapSlaCutoffdateVO {
            public Object get(ApsReferenceViewRowImpl obj) {
                return obj.getAapSlaCutoffdateVO();
            }

            public void put(ApsReferenceViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ApsReferenceViewRowImpl object);

        public abstract void put(ApsReferenceViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REFERENCECODE = AttributesEnum.ReferenceCode.index();
    public static final int REFERENCEDESCRIPTION = AttributesEnum.ReferenceDescription.index();
    public static final int REFERENCEID = AttributesEnum.ReferenceId.index();
    public static final int REFERENCETYPE = AttributesEnum.ReferenceType.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int EFFECTIVEFG = AttributesEnum.EffectiveFg.index();
    public static final int EDITABLE = AttributesEnum.editable.index();
    public static final int DELETABLE = AttributesEnum.deletable.index();
    public static final int AAPSLACUTOFFDATEVO = AttributesEnum.AapSlaCutoffdateVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ApsReferenceViewRowImpl() {
    }

    /**
     * Gets ApsReferenceEntity entity object.
     * @return the ApsReferenceEntity
     */
    public ApsReferenceEntityImpl getApsReferenceEntity() {
        return (ApsReferenceEntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for REFERENCE_CODE using the alias name ReferenceCode.
     * @return the REFERENCE_CODE
     */
    public String getReferenceCode() {
        return (String) getAttributeInternal(REFERENCECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_CODE using the alias name ReferenceCode.
     * @param value value to set the REFERENCE_CODE
     */
    public void setReferenceCode(String value) {
        setAttributeInternal(REFERENCECODE, value);
    }

    /**
     * Gets the attribute value for REFERENCE_DESCRIPTION using the alias name ReferenceDescription.
     * @return the REFERENCE_DESCRIPTION
     */
    public String getReferenceDescription() {
        return (String) getAttributeInternal(REFERENCEDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_DESCRIPTION using the alias name ReferenceDescription.
     * @param value value to set the REFERENCE_DESCRIPTION
     */
    public void setReferenceDescription(String value) {
        setAttributeInternal(REFERENCEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @return the REFERENCE_ID
     */
    public Number getReferenceId() {
        return (Number) getAttributeInternal(REFERENCEID);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_ID using the alias name ReferenceId.
     * @param value value to set the REFERENCE_ID
     */
    public void setReferenceId(Number value) {
        setAttributeInternal(REFERENCEID, value);
    }

    /**
     * Gets the attribute value for REFERENCE_TYPE using the alias name ReferenceType.
     * @return the REFERENCE_TYPE
     */
    public String getReferenceType() {
        return (String) getAttributeInternal(REFERENCETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for REFERENCE_TYPE using the alias name ReferenceType.
     * @param value value to set the REFERENCE_TYPE
     */
    public void setReferenceType(String value) {
        setAttributeInternal(REFERENCETYPE, value);
    }

    /**
     * Gets the attribute value for EFFECTIVE_END_DATE using the alias name EffectiveEndDate.
     * @return the EFFECTIVE_END_DATE
     */
    public Date getEffectiveEndDate() {
        return (Date) getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE_END_DATE using the alias name EffectiveEndDate.
     * @param value value to set the EFFECTIVE_END_DATE
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**
     * Gets the attribute value for EFFECTIVE__FG using the alias name EffectiveFg.
     * @return the EFFECTIVE__FG
     */
    public String getEffectiveFg() {
        return (String) getAttributeInternal(EFFECTIVEFG);
    }

    /**
     * Sets <code>value</code> as attribute value for EFFECTIVE__FG using the alias name EffectiveFg.
     * @param value value to set the EFFECTIVE__FG
     */
    public void setEffectiveFg(String value) {
        setAttributeInternal(EFFECTIVEFG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute editable.
     * @return the editable
     */
    public Boolean geteditable() {
        return (Boolean) getAttributeInternal(EDITABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute editable.
     * @param value value to set the  editable
     */
    public void seteditable(Boolean value) {
        setAttributeInternal(EDITABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute deletable.
     * @return the deletable
     */
    public Boolean getdeletable() {
        return (Boolean) getAttributeInternal(DELETABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute deletable.
     * @param value value to set the  deletable
     */
    public void setdeletable(Boolean value) {
        setAttributeInternal(DELETABLE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AapSlaCutoffdateVO.
     */
    public RowIterator getAapSlaCutoffdateVO() {
        return (RowIterator)getAttributeInternal(AAPSLACUTOFFDATEVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    @Override
    public boolean isAttributeUpdateable(int i) {
        Boolean editable = this.geteditable();
        Boolean deletable = this.getdeletable();
        
        if ((editable != null && editable.equals(true))
        ||(deletable != null && deletable.equals(true))) {
            return super.isAttributeUpdateable(i);
        } else {
            return false;
    }
        
        
    //        if (deletable != null && deletable.equals(true)) {
    //            return super.isAttributeUpdateable(i);
    //        } else {
    //            return false;
    //        }


    }
    @Override
    protected void create(AttributeList attributeList) {

        attributeList.setAttribute("editable", true);

        super.create(attributeList);
    }

}
