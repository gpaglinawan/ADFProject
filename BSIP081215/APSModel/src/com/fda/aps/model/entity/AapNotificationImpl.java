package com.fda.aps.model.entity;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 11 16:34:09 EDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AapNotificationImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        NotificationId {
            public Object get(AapNotificationImpl obj) {
                return obj.getNotificationId();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setNotificationId((Number)value);
            }
        }
        ,
        RequestId {
            public Object get(AapNotificationImpl obj) {
                return obj.getRequestId();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setRequestId((Number)value);
            }
        }
        ,
        SubmittedFrom {
            public Object get(AapNotificationImpl obj) {
                return obj.getSubmittedFrom();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setSubmittedFrom((String)value);
            }
        }
        ,
        SubmittedTo {
            public Object get(AapNotificationImpl obj) {
                return obj.getSubmittedTo();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setSubmittedTo((String)value);
            }
        }
        ,
        WfStatus {
            public Object get(AapNotificationImpl obj) {
                return obj.getWfStatus();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setWfStatus((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(AapNotificationImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreatedDate {
            public Object get(AapNotificationImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(AapNotificationImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(AapNotificationImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CenterItemNo {
            public Object get(AapNotificationImpl obj) {
                return obj.getCenterItemNo();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setCenterItemNo((String)value);
            }
        }
        ,
        NotifComment {
            public Object get(AapNotificationImpl obj) {
                return obj.getNotifComment();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setNotifComment((String)value);
            }
        }
        ,
        RequestsEntity {
            public Object get(AapNotificationImpl obj) {
                return obj.getRequestsEntity();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setRequestsEntity((RequestsEntityImpl)value);
            }
        }
        ,
        AapRequests {
            public Object get(AapNotificationImpl obj) {
                return obj.getAapRequests();
            }

            public void put(AapNotificationImpl obj, Object value) {
                obj.setAapRequests((AapRequestsImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AapNotificationImpl object);

        public abstract void put(AapNotificationImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int NOTIFICATIONID = AttributesEnum.NotificationId.index();
    public static final int REQUESTID = AttributesEnum.RequestId.index();
    public static final int SUBMITTEDFROM = AttributesEnum.SubmittedFrom.index();
    public static final int SUBMITTEDTO = AttributesEnum.SubmittedTo.index();
    public static final int WFSTATUS = AttributesEnum.WfStatus.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int CENTERITEMNO = AttributesEnum.CenterItemNo.index();
    public static final int NOTIFCOMMENT = AttributesEnum.NotifComment.index();
    public static final int REQUESTSENTITY = AttributesEnum.RequestsEntity.index();
    public static final int AAPREQUESTS = AttributesEnum.AapRequests.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AapNotificationImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.fda.aps.model.entity.AapNotification");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for NotificationId, using the alias name NotificationId.
     * @return the NotificationId
     */
    public Number getNotificationId() {
        return (Number)getAttributeInternal(NOTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NotificationId.
     * @param value value to set the NotificationId
     */
    public void setNotificationId(Number value) {
        setAttributeInternal(NOTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for RequestId, using the alias name RequestId.
     * @return the RequestId
     */
    public Number getRequestId() {
        return (Number)getAttributeInternal(REQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestId.
     * @param value value to set the RequestId
     */
    public void setRequestId(Number value) {
        setAttributeInternal(REQUESTID, value);
    }

    /**
     * Gets the attribute value for SubmittedFrom, using the alias name SubmittedFrom.
     * @return the SubmittedFrom
     */
    public String getSubmittedFrom() {
        return (String)getAttributeInternal(SUBMITTEDFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmittedFrom.
     * @param value value to set the SubmittedFrom
     */
    public void setSubmittedFrom(String value) {
        setAttributeInternal(SUBMITTEDFROM, value);
    }

    /**
     * Gets the attribute value for SubmittedTo, using the alias name SubmittedTo.
     * @return the SubmittedTo
     */
    public String getSubmittedTo() {
        return (String)getAttributeInternal(SUBMITTEDTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubmittedTo.
     * @param value value to set the SubmittedTo
     */
    public void setSubmittedTo(String value) {
        setAttributeInternal(SUBMITTEDTO, value);
    }

    /**
     * Gets the attribute value for WfStatus, using the alias name WfStatus.
     * @return the WfStatus
     */
    public String getWfStatus() {
        return (String)getAttributeInternal(WFSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfStatus.
     * @param value value to set the WfStatus
     */
    public void setWfStatus(String value) {
        setAttributeInternal(WFSTATUS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }


    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }


    /**
     * Gets the attribute value for CenterItemNo, using the alias name CenterItemNo.
     * @return the CenterItemNo
     */
    public String getCenterItemNo() {
        return (String)getAttributeInternal(CENTERITEMNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CenterItemNo.
     * @param value value to set the CenterItemNo
     */
    public void setCenterItemNo(String value) {
        setAttributeInternal(CENTERITEMNO, value);
    }

    /**
     * Gets the attribute value for NotifComment, using the alias name NotifComment.
     * @return the NotifComment
     */
    public String getNotifComment() {
        return (String)getAttributeInternal(NOTIFCOMMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for NotifComment.
     * @param value value to set the NotifComment
     */
    public void setNotifComment(String value) {
        setAttributeInternal(NOTIFCOMMENT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity RequestsEntityImpl.
     */
    public RequestsEntityImpl getRequestsEntity() {
        return (RequestsEntityImpl)getAttributeInternal(REQUESTSENTITY);
    }

    /**
     * Sets <code>value</code> as the associated entity RequestsEntityImpl.
     */
    public void setRequestsEntity(RequestsEntityImpl value) {
        setAttributeInternal(REQUESTSENTITY, value);
    }


    /**
     * @return the associated entity AapRequestsImpl.
     */
    public AapRequestsImpl getAapRequests() {
        return (AapRequestsImpl)getAttributeInternal(AAPREQUESTS);
    }

    /**
     * Sets <code>value</code> as the associated entity AapRequestsImpl.
     */
    public void setAapRequests(AapRequestsImpl value) {
        setAttributeInternal(AAPREQUESTS, value);
    }


    /**
     * @param notificationId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number notificationId) {
        return new Key(new Object[]{notificationId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
       SequenceImpl seq = new SequenceImpl("NOTIFICATION_SEQ", getDBTransaction());
       Number reqNo = seq.getSequenceNumber();
       setNotificationId(reqNo);
       super.create(attributeList);
    }
    
    //    protected void create(AttributeList attributeList) {
    //        SequenceImpl seq = new SequenceImpl("REQUEST_SEQ", getDBTransaction());
    //        Number reqNo = seq.getSequenceNumber();
    //        setRequestSequence(reqNo.toString());
    //        super.create(attributeList);
    //    }
}
